{"ast":null,"code":"var _jsxFileName = \"E:\\\\exam\\\\counter\\\\my-appGit\\\\src\\\\Counter\\\\Button\\\\Button.tsx\";\nimport s from \"../Button/Button.module.css\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = props => {\n  let presentValue = props.value;\n\n  const incButton = () => presentValue < 5 ? props.buttonInc() : '';\n\n  const resetButton = () => props.buttonReset();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.button,\n      onClick: resetButton,\n      disabled: presentValue === 5,\n      children: props.nameButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n};\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["E:/exam/counter/my-appGit/src/Counter/Button/Button.tsx"],"names":["s","React","Button","props","presentValue","value","incButton","buttonInc","resetButton","buttonReset","button","nameButton"],"mappings":";AAAA,OAAOA,CAAP,MAAc,6BAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAQA,OAAO,MAAMC,MAAM,GAAIC,KAAD,IAA4B;AAC9C,MAAIC,YAAY,GAAGD,KAAK,CAACE,KAAzB;;AACA,QAAMC,SAAS,GAAG,MAAMF,YAAY,GAAG,CAAf,GAAmBD,KAAK,CAACI,SAAN,EAAnB,GAAuC,EAA/D;;AACK,QAAMC,WAAW,GAAG,MAAML,KAAK,CAACM,WAAN,EAA1B;;AACL,sBAAO;AAAA,2BACH;AAAQ,MAAA,SAAS,EAAET,CAAC,CAACU,MAArB;AAA6B,MAAA,OAAO,EAAEF,WAAtC;AAAmD,MAAA,QAAQ,EAAEJ,YAAY,KAAK,CAA9E;AAAA,gBAAkFD,KAAK,CAACQ;AAAxF;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAPM;KAAMT,M","sourcesContent":["import s from \"../Button/Button.module.css\";\r\nimport React from \"react\";\r\n\r\ntype ButtonPropsType = {\r\n    nameButton:string\r\n    value:number\r\n    buttonInc:()=>void\r\n    buttonReset:()=>void\r\n}\r\nexport const Button = (props: ButtonPropsType) => {\r\n    let presentValue = props.value\r\n    const incButton = () => presentValue < 5 ? props.buttonInc() : ''\r\n         const resetButton = () => props.buttonReset()\r\n    return <div >\r\n        <button className={s.button} onClick={resetButton} disabled={presentValue === 5}>{props.nameButton}</button>\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}